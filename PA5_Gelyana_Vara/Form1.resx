<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AABcaWkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////AHCDgwFGTEwCNTY2FDQ1NR42NzcPepCQAVBZ
        WQJCR0cDNDU1IDQ0NDs0NDQ8NDQ0PDQ0NDw0NDQ8NDQ0PDQ0NDU0NDQqMzMzhjMzM8wzMzPYMzMzwjM0
        NG41NTUcODo6CTMzM7QzMzPIMzMzuzMzM7szMzO7MzMzvDMzM7gzMzOdMzMzzDMzM+AzMzOQMzMzgjMz
        M58zMzPrMzMzrjQ0NCczMzO+MzMztzMzM7gzMzO0MzMzsjMzM7wzMzOaMzMzpTMzM9w0NDQ5R05OAjc5
        OQtAREQENDQ0XDMzM+ozMzNvMzMzuzMzM7MzMzO0MzMzsDMzM64zMzO3MzMznzMzM9kzMzOA////ADc4
        OAw0NTUgPUBABTk6OgkzMzOwMzMzyDMzM7szMzOvMzMzrzMzM6szMzOpMzMzsTMzM6YzMzPkMzQ0bzk7
        Owg0NDQ/MzMzeDQ0NDo2NjYSMzMzmzMzM+EzMzO7MzMzsjMzM7QzMzOwMzMzrTMzM7czMzOeMzMz2DMz
        M4I1NjYXNDQ0STQ0NDI0NDQ5Njc3ETMzM7IzMzPGMzMzuzMzM7UzMzO3MzMzszMzM7EzMzO7MzMzmjMz
        M6IzMzPeNDQ0Sjo8PAc3OTkLQEREBDQ0NGIzMzPqMzQ0ajMzM7szMzOyMzMztDMzM7AzMzOtMzMztjMz
        M6czMzOdMzMzzTMzM+AzMzOYMzMziTMzM6YzMzPoMzMzuTQ0NDwzMzPAMzMztzMzM6wzMzOqMzMzqTMz
        M64zMzOmMzMzrDMzM44zMzOrMzMzyjMzM9IzMzPGMzMzoDMzM7E0NDRbMzMzqTMzM8czMzPDMzMzwzMz
        M8MzMzPDMzMzxDMzM8MzMzPEMzMztjMzM6AzMzOdMzMzozMzM7wzMzPENDQ0SjMzM9czMzP2MzMz/DMz
        M/kzMzP2MzMz/jMzM/MzMzP+MzMz9zMzM/kzMzP/MzMz9jMzM/8zMzP2MzMz9TM0NF8zMzPLMzMztzMz
        M9ozMzPNMzMzvjMzM+UzMzOyMzMz4jMzM8IzMzPHMzMz3jMzM7IzMzPnMzMzujMzM8wzNDRhMzMzljMz
        M80zMzPIMzMzyDMzM8szMzPIMzMzzDMzM8gzMzPKMzMzyTMzM8gzMzPMMzMzyDMzM8wzMzO6NDQ0PzY2
        NhAzNDRtNDQ0MzQ0NEc0NDRgNDU1IjM0NHQ0NTUnNDQ0WDQ0NE80NDQsMzQ0cjQ1NSAzNDRmNDQ0O0JG
        RgNFSkoCPD4+BUVKSgJAREQDPUBABExUVAI7Pj4FSlFRAj5BQQQ/QkIER05OAjs+PgVOVlYCPD8/BUBE
        RANBRkYDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>